The four pillars of OOP are Inheritance, Encapsulation, Polymorphism, and Composition

Part 1 = Inheritance
Part 2 = Encapsulation, Polymorphism, and Composition

Object -> Like a computer

Object have 2 basics
State -> Like how much RAM or OS it has
Behavior -> Like Turning on and turning off

What he wants it to create a class called Car

Cool note;
- Classes can be organized into logical groupings, which are called packages
- You delcare a package name in the class using the package statement
- If you do not declare a package, the class implicitly belongs to the default package.
- A class is said to be a top-level class, if it is defined in the source code file, and not enclosed in the code block
of another class, type, method
- A top-level class has only two valid access modifier options: public or none
    - public   = any other class in any package can access this class
    - ( none ) = When the modifier is omitted, this has a special meaning, called package access, meaning the class is accessible
                only to classes within the same package
- Valid access modifiers go from lest restrictive (top) to most restrictive (bottom)
    - public
    - protected = allows classes in the same package, and any subclassed in other packages, to have access to the member
    - ( none specified )
    - private = means no other class can access this member

Encapsulation
- Building of behavior and attributes on a single object
- The other is the practice of hiding fields, and some methods, from public access

